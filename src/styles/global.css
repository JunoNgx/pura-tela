@import "src/styles/vars.css";
@import "src/styles/mixins.css";

@font-face {
	font-family: "Source Code Pro";
	font-style: normal;
	font-weight: 400;
	src: url("/SourceCodePro-VariableFont_wght.ttf") format("truetype");
}

@font-face {
    font-family: "Inclusive Sans";
    font-style: normal;
    font-weight: 400;
    src: url("/InclusiveSans-VariableFont_wght.ttf") format("truetype");
}

html {
    accent-color: var(--colPri);
    font-family: var(--fontFamily);
    font-size: var(--fontSizeMd);
    background-color: var(--colBg);
    color: var(--colPri);

    scrollbar-gutter: stable both-edges;
    scrollbar-width: thin;

    transition: color ease-in-out var(--transTimeFast),
        background-color ease-in-out var(--transTimeFast);
}

body {
    margin: 0;
}

::selection {
    color: var(--colBg);
    background-color: var(--colPri);
}

:focus:not(:focus-visible) {
    outline: none;
}

:focus-visible {
    outline-offset: var(--outlineOffset);
    outline: var(--lineWeight) solid var(--colPri);
}

a {
    -webkit-tap-highlight-color: transparent;
}

a,
a:hover,
a:visited {
    color: var(--colPri);
}

li {
    list-style: square;
}

button {
    cursor: pointer;
    font-family: var(--fontFamily);
    color: var(--colPri);
    background-color: transparent;
    border-radius: 0;
    border: var(--lineWeight) solid var(--colPri);
    font-size: var(--fontSizeMd);
    padding: 0.5rem 1rem;
    -webkit-tap-highlight-color: transparent;
    outline-offset: var(--outlineOffset);
    transition: all ease-in-out var(--transTime);
}

button:hover {
    color: var(--colBg);
    background-color: var(--colPri);
}

button:disabled,
button:disabled:hover {
    cursor: not-allowed;
    color: var(--colSec);
    border-color: var(--colSec);
    background-color: transparent;
}

button,
label {
    text-transform: lowercase;
}

input {
    font-family: var(--fontFamilyMono);
    font-size: var(--fontSizeMd);
    color: var(--colPri);
    background-color: transparent;
    border-radius: 0;
    border: none;
    border-bottom: var(--lineWeight) solid var(--colPri);
}

input:focus {
    border: none;
    border-bottom: var(--lineWeight) solid var(--colPri);
    outline: var(--lineWeight) solid var(--colPri);
    outline-offset: var(--outlineOffset);
}

input[type="checkbox"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    vertical-align: middle;
    background: transparent;
    height: var(--sizeCheckbox);
    width: var(--sizeCheckbox);
    border: var(--lineWeight) solid var(--colPri);
}
  
input[type="checkbox"]:checked {
    background-color: transparent;
}

input[type="checkbox"]:after {
    content: '';
    position: relative;
    left: 40%;
    top: 20%;
    width: 15%;
    height: 40%;
    border: solid var(--colPri);
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
    display: none;
}

input[type="checkbox"]:checked:after {
    display: block;
}

input[type="checkbox"],
input[type="checkbox"]+label{
    cursor:pointer;
}

/* Hide spin buttons */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    appearance: none;
    margin: 0;
}

/* Firefox only */
input[type="number"] {
    -moz-appearance: textfield;
    appearance: textfield;
}

input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    -webkit-tap-highlight-color: transparent;
    width: 12rem;
    height: 0.2rem;
    background: var(--colPri);
    border-radius: 0;
    margin: 1rem 0;
    cursor: pointer;
    border: none;
}

/* The following two blocks must be separated */
/* Browser may recognise only one and not both; causing the entire block to be invalid */
input[type="range"]::-moz-range-thumb {
    appearance: none;
    width: 0.5rem;
    height: 1.5rem;
    border-radius: 0;
    background: var(--colBg);
    border: var(--lineWeight) solid var(--colPri);
    cursor: pointer;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 0.75rem;
    height: 1.5rem;
    border-radius: 0;
    background: var(--colBg);
    border: var(--lineWeight) solid var(--colPri);
    box-shadow: none;
}

select {
    font-family: var(--fontFamily);
    font-size: var(--fontSizeMd);
    border-radius: 0;
    border: none;
    border-bottom: var(--lineWeight) solid var(--colPri);
    background-color: transparent;
    color: var(--colPri);
    cursor: pointer;
}

select:focus {
    outline-offset: var(--outlineOffset);
    outline: var(--lineWeight) solid var(--colPri);
}

label {
    -webkit-tap-highlight-color: transparent;
}

option {
    cursor: pointer;
}

h1 {
    margin: 0;
}

h2,
h3 {
    margin: 0;
    text-transform: uppercase;
}

code {
    font-family: var(--fontFamilyMono);
    font-size: 15px;
    padding: 0 0.25rem;
    background-color: var(--colBg2);
    border-radius: 0.2rem;
}

dialog {
    background-color: transparent;
    border: none;
}

dialog::backdrop {
    background-color: rgba(var(--colBlackRgb), 0.75);
    backdrop-filter: blur(10px);
}

dialog[open] {
    animation: DialogOpen var(--transTimeFast) ease-in-out;
}

dialog[open]::backdrop {
    animation: DialogBackDropFadeIn var(--transTimeFast) ease-in-out;
}

@keyframes DialogOpen {
    from {
        opacity: 0;
        transform: translateY(2rem);
    } to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes DialogBackdropFadeIn {
    from {
        opacity: 0;
    } to {
        opacity: 1;
    }
}

@media screen and (width < 850px) {
    html {
        background-color: var(--colBg);
    }
}

/* Colour picker customisation */

.color-picker .color,
.color-picker .picker,
.color-picker .track,
.color-picker input,
.color-picker button {
    border-radius: 0 !important;
}

.color-picker .wrapper {
    border-radius: 0 !important;
}
